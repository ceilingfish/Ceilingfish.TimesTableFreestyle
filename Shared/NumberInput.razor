@using System.Text;

<div class="container" id="number-input">
    <div class="row">
        <div class="col">
            <button @onclick="() => PressNumber(1)">1</button>
        </div>
        <div class="col">
            <button @onclick="() => PressNumber(2)">2</button>
        </div>
        <div class="col">
            <button @onclick="() => PressNumber(3)">3</button>
        </div>
    </div>
    <div class="row">
        <div class="col">
            <button @onclick="() => PressNumber(4)">4</button>
        </div>
        <div class="col">
            <button @onclick="() => PressNumber(5)">5</button>
        </div>
        <div class="col">
            <button @onclick="() => PressNumber(6)">6</button>
        </div>
    </div>
    <div class="row">
        <div class="col">
            <button @onclick="() => PressNumber(7)">7</button>
        </div>
        <div class="col">
            <button @onclick="() => PressNumber(8)">8</button>
        </div>
        <div class="col">
            <button @onclick="() => PressNumber(9)">9</button>
        </div>
    </div>
    <div class="row">
        <div class="col delete-number">
            <button @onclick="RemoveNumber">&lt;</button>
        </div>
        <div class="col">
            <button @onclick="() => PressNumber(0)">0</button>
        </div>
        <div class="col submit-number">
            <button @onclick="SubmitNumber">Go</button>
        </div>
    </div>
</div>

@code {

    private readonly StringBuilder _number = new StringBuilder();

    [Parameter]
    public EventCallback OnNumberSubmitted { get; set; }

    [Parameter]
    public EventCallback<int?> OnNumberChanged { get; set; }


    private async Task PressNumber(int number)
    {
        _number.Append(number);
        await OnNumberChanged.InvokeAsync(int.Parse(_number.ToString()));
    }

    private async Task RemoveNumber()
    {
        if(_number.Length == 0) return;

        _number.Remove(_number.Length-1,1);
        await OnNumberChanged.InvokeAsync(int.TryParse(_number.ToString(), out var result) ? result : null);
    }

    private async Task SubmitNumber()
    {
        await OnNumberSubmitted.InvokeAsync();
        _number.Clear();
    }
}